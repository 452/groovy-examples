def groovyVersion = '2.4.5'
def junitVersion = '4.12'

version = "0.0.1"
description = "Groovy examples"

buildscript {
	repositories { mavenCentral() }
}

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'jacoco'

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories { mavenCentral() }

dependencies {
	compile "org.codehaus.groovy:groovy-all:2.4.5"
	compile "org.codehaus.groovy.modules.http-builder:http-builder:0.7.+"
	compile "oauth.signpost:signpost-core:1.2.+"
	compile "oauth.signpost:signpost-commonshttp4:1.2.1.2"
	compile "commons-io:commons-io:2.4"
	compile "org.apache.httpcomponents:httpcore:4.4.1"
	compile "org.apache.httpcomponents:httpmime:4.3"
	testCompile('org.codehaus.groovy:groovy-all:2.4.4')
	testCompile('org.spockframework:spock-core:1.0-groovy-2.4')
	testCompile('cglib:cglib:2.2')
	testCompile 'org.testng:testng:6.+'
}

compileGroovy {
	groovyOptions.forkOptions.jvmArgs = [
		'-Dgroovy.grape.enable=false'
	]
}

compileTestGroovy {
	groovyOptions.forkOptions.jvmArgs = [
		'-Dgroovy.grape.enable=false'
	]
}

test {
	useTestNG() {
		useDefaultListeners = true
	}
	reports.html.enabled = true
	systemProperty 'groovy.grape.enable', 'false'
	testLogging {
		exceptionFormat "full"
		events "passed", "skipped", "failed", "standardOut", "standardError"
	}
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

sourceSets {
    main.groovy
    main.java
    test.groovy
    test.java
}

task init(description: 'Initialize project directory structure.') << {
	sourceSets*.allSource.srcDirs.flatten() { File sourceDirectory ->
	   	if (!sourceDirectory.exists()) {
	   		sourceDirectory.mkdirs()
	   	}
	}
}